@model InvoiceManager.Models.ViewModels.EditInvoicePositionViewModel


@{
    ViewBag.Title = Model.Heading;
}

<h2>@Model.Heading</h2>

@using (Html.BeginForm("InvoicePosition", "Home"))
{
    if (Model.InvoicePosition.Id == 0)
    {
        <p class="alert alert-info mb-4 mt-4">
            Pola: Lp, Produkt, Ilość i Wartość są
            <strong>wymagane</strong>
        </p>
    }
        @Html.HiddenFor(x => x.InvoicePosition.Id)
        @Html.HiddenFor(x => x.InvoicePosition.InvoiceId)

        <div class="form-group mb-3">
            @Html.LabelFor(x => x.InvoicePosition.Lp)
            @Html.TextBoxFor(x => x.InvoicePosition.Lp,
           new { @class = "form-control" })
        </div>

        <div class="form-group mb-3">
            @Html.LabelFor(x => x.InvoicePosition.ProductId)
            @Html.DropDownListFor(x => x.InvoicePosition.ProductId,
           new SelectList(Model.Products, "Id", "Name"),
           "--- Wybierz produkt ---",
           new { @class = "form-control" })
        </div>

        <div class="form-group mb-3">
            @Html.LabelFor(x => x.InvoicePosition.Quantity)
            @Html.TextBoxFor(x => x.InvoicePosition.Quantity,
           new { @class = "form-control" })
        </div>
        
        
        if(true)
        {
        <div class="form-group mb-3">
            @Html.LabelFor(x => x.InvoicePosition.Value)
            @Html.TextBoxFor(x => x.InvoicePosition.Value,
           new { @class = "form-control", @readonly = "readonly" })
        </div>
        }

        <button class="btn btn-primary btn-lg" type="submit">
            Zapisz
        </button>
    
}
